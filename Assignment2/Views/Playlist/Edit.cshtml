@model Assignment2.Models.PlaylistEditTracksFormViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Playlist @Model.Name</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Select tracks, and click the "Save changes" button</h4>
        <hr />
        <div>
            <input type="submit" value="Save Changes" class="btn btn-default" />
            @Html.ActionLink("Back to Details", "Details/" + Model.PlaylistId) |
            @Html.ActionLink("Back to List", "Index")
        </div>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlaylistId)

        <div class="row">
            <div class=" col-md-6">
                <h4>All Tracks</h4>
                @foreach (var item in Model.TrackList)
                {
                    <input type="checkbox" name="TrackIds" value="@item.Value" checked="@item.Selected" />
                    @item.Text <br />
                }
            </div>
            <div class="col-md-6 bg-info">
                <div class="container-fluid ">
                    <h4>Now on playlist <span class="badge">@Html.DisplayFor(model => model.TracksCount)</span> </h4>
                    @foreach (var item in Model.Tracks)
                    {
                        @Html.DisplayFor(modelItem => item.NameDetailed); <br />
                    }
                </div>
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TracksCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TracksCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TracksCount, "", new { @class = "text-danger" })
                </div>
            </div> *@

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
